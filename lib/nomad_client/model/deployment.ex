# NOTE: This file is auto generated by OpenAPI Generator 6.2.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule NomadClient.Model.Deployment do
  @moduledoc """

  """

  @derive [Poison.Encoder]
  defstruct [
    :CreateIndex,
    :ID,
    :IsMultiregion,
    :JobCreateIndex,
    :JobID,
    :JobModifyIndex,
    :JobSpecModifyIndex,
    :JobVersion,
    :ModifyIndex,
    :Namespace,
    :Status,
    :StatusDescription,
    :TaskGroups
  ]

  @type t :: %__MODULE__{
          :CreateIndex => integer() | nil,
          :ID => String.t() | nil,
          :IsMultiregion => boolean() | nil,
          :JobCreateIndex => integer() | nil,
          :JobID => String.t() | nil,
          :JobModifyIndex => integer() | nil,
          :JobSpecModifyIndex => integer() | nil,
          :JobVersion => integer() | nil,
          :ModifyIndex => integer() | nil,
          :Namespace => String.t() | nil,
          :Status => String.t() | nil,
          :StatusDescription => String.t() | nil,
          :TaskGroups => %{optional(String.t()) => NomadClient.Model.DeploymentState.t()} | nil
        }
end

defimpl Poison.Decoder, for: NomadClient.Model.Deployment do
  import NomadClient.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:TaskGroups, :map, NomadClient.Model.DeploymentState, options)
  end
end
