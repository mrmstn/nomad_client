# NOTE: This file is auto generated by OpenAPI Generator 6.2.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule NomadClient.Model.Service do
  @moduledoc """

  """

  @derive [Poison.Encoder]
  defstruct [
    :Address,
    :AddressMode,
    :CanaryMeta,
    :CanaryTags,
    :CheckRestart,
    :Checks,
    :Connect,
    :EnableTagOverride,
    :Meta,
    :Name,
    :OnUpdate,
    :PortLabel,
    :Provider,
    :TaggedAddresses,
    :Tags,
    :TaskName
  ]

  @type t :: %__MODULE__{
          :Address => String.t() | nil,
          :AddressMode => String.t() | nil,
          :CanaryMeta => %{optional(String.t()) => String.t()} | nil,
          :CanaryTags => [String.t()] | nil,
          :CheckRestart => NomadClient.Model.CheckRestart.t() | nil,
          :Checks => [NomadClient.Model.ServiceCheck.t()] | nil,
          :Connect => NomadClient.Model.ConsulConnect.t() | nil,
          :EnableTagOverride => boolean() | nil,
          :Meta => %{optional(String.t()) => String.t()} | nil,
          :Name => String.t() | nil,
          :OnUpdate => String.t() | nil,
          :PortLabel => String.t() | nil,
          :Provider => String.t() | nil,
          :TaggedAddresses => %{optional(String.t()) => String.t()} | nil,
          :Tags => [String.t()] | nil,
          :TaskName => String.t() | nil
        }
end

defimpl Poison.Decoder, for: NomadClient.Model.Service do
  import NomadClient.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:CheckRestart, :struct, NomadClient.Model.CheckRestart, options)
    |> deserialize(:Checks, :list, NomadClient.Model.ServiceCheck, options)
    |> deserialize(:Connect, :struct, NomadClient.Model.ConsulConnect, options)
  end
end
